<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA37aYAOzR
        vADKiFgEw3pFBsN6RQbDekUGw3pFBsN6RQbDekUGw3pFBsN6RQbDekUGw3pFBsN6RQbDekUGx4JPBdWe
        dgDVnXUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMFz
        OgCtSgAAtVsYPrBRC6yuTgi3rk4Itq5OCLauTgi2rk4Itq5OCLauTgi2rk4Itq5OCLauTgi2rk4Itq5O
        CLavTwixslQPUQAAAADFfUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0513APjv6wKxVA+ltlYG/851Fv/Pdxf/z3cX/893F//Pdxf/z3cX/893F//Pdxf/z3cX/893
        F//Pdxf/z3cX/7tcCf+vUAjEvnA1DL1vMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADWo34A4buhBrJWE7bMcxX//7c4//+3OP//tjb//7Y1//+2Nf//tjX//7Y1//+2
        Nf//tjX//7Y2//+3OP//uDn/2IId/69OB828ay4QvGwvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANajfgDhu6EGslYTts11Fv//tjj//7Y5///Ndv//2pv//9qa///a
        mv//2pr//9qa///am///0YL//7g9//+4Of/ZhB7/r08HzbxrLhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1qN+AOG7oQayVhO2zXUW//+2OP//tzr//9ue///w
        1f//79P//+/T///v0///79P///DV///jsf//ukL//7c4/9mEHv+vTwfNvGsuELxsLwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWo34A4buhBrJWE7bNdRb//7Y4//+2
        OP//tzz//7pB//+7Qv//u0L//7tC//+7Qv//ukL//7g9//+2OP//uDn/2YQe/69PB828ay4QvGwvAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANajfgDhu6EGslYTts11
        Fv//tjj//7Y4//+2OP/3rDL/6Zgn/+iXJv/olyb/6Jcm//SoMP//tjj//7Y4//+4Of/ZhB7/r08Hzbxr
        LhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1qN+AOG7
        oQayVhO2zXUW//+2OP//tjj//7c4/9yKJ//UnnT/37WV/961lP/Yp4L/1IMq//61N///tjj//7g5/9mE
        Hv+vTwfNvGsuELxsLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADWo34A4buhBrJWE7bNdRb//7Y4//+2OP//tzj/2Ygq/+zXyv////////////Xp4v/Uhzb//rQ1//+2
        OP//uDn/2YQe/69PB828ay4QvGwvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANajfgDhu6EGslYTts11Fv//tjj//7Y4//+3OP/gjyf/z41V/9ada//WnGv/0pNe/9iH
        KP//tTf//7Y4//+4Of/ZhB7/r08HzbxrLhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1qN+AOG7oQayVhO2y3IU//61N//+tTf//rU3//uxNf/zpS3/8qQs//Kk
        LP/ypCz/+a80//61N//+tTf//7Y4/9eBHP+vTgfNvGsuELxsLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWo34A4buhBrNYFLazUwT/xmsR/8dtEv/HbRL/x20S/8ht
        Ev/IbRL/yG0S/8htEv/HbRL/x20S/8dtEv/HbBL/t1cH/69PCM28ay4QvGwvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANajfgDhu6EGs1gUtrVVBv/LcRT/zHMV/8xz
        Ff/McxX/zHMV/8xzFf/McxX/zHMV/8xzFf/McxX/zHMV/8xzFf+5Wgj/r08IzbxrLhC8bC8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1qN+AOG7oQayVhO2zHMV//+2
        OP//tjj//7U2//+1Nf//tTX//7U1//+1Nf//tTX//7U1//+1Nv//tjj//7c5/9eCHf+vTgfNvGsuELxs
        LwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWo34A4buhBrJW
        E7bNdRb//7Y4//+2Of//y3L//9iV///YlP//2JT//9iU///YlP//2JX//9B9//+4Pf//uDn/2YQe/69P
        B828ay4QvGwvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANaj
        fgDhu6EGslYTts11Fv//tjj//7c7///cof//8dn///DX///w1///8Nf///DX///x2f//5LT//7pC//+3
        OP/ZhB7/r08HzbxrLhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1qN+AOG7oQayVhO2zXUW//+2OP//tjj//7g9//+7Q///vET//7xE//+8RP//vET//7tE//+5
        P///tjj//7g5/9mEHv+vTwfNvGsuELxsLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADWo34A4buhBrJWE7bNdRb//7Y4//+2OP//tjj/+K0y/+uaKP/qmSf/6pkn/+qZ
        J//1qTD//7Y4//+2OP//uDn/2YQe/69PB828ay4QvGwvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANajfgDhu6EGslYTts11Fv//tjj//7Y4//+3OP/ciif/05tw/96x
        j//dsY7/16R9/9WEKv/+tTf//7Y4//+4Of/ZhB7/r08HzbxrLhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1qN+AOG7oQayVhO2zXUW//+2OP//tjj//7c4/9mI
        Kv/s18r////////////16eL/1Ic2//60Nf//tjj//7g5/9mEHv+vTwfNvGsuELxsLwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWo34A4buhBrJWE7bNdRb//7Y4//+2
        OP//tzj/344n/8+PWP/WoG//1qBv/9GVYv/Xhij//7U3//+2OP//uDn/2YQe/69PB828ay4QvGwvAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANajfgDhu6EGslYTtsty
        Ff//tjj//7Y4//+2OP/7sTX/8qQs//GjK//xoyv/8aMs//qvNP//tjj//7Y4//+3Of/XgR3/r04Hzbxr
        LhC8bC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1KB5AP//
        /wKxUw6htVQF/8lvE//KcRT/ynEU/8pxFP/LchX/y3IV/8tyFf/LchX/y3EU/8pxFP/KcRT/ynEU/7hZ
        CP+vTwjBwHM6DL9yOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9aSsAsFAJALNVEDOuTQWVq0cAnKtHAJyrRwCcq0cAnKtHAJyrRwCcq0cAnKtHAJyrRwCcq0cAnKtH
        AJyrRwCcrUoCmbBRCkSIAAAAx4FOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////4AB//8AAP/+AAB//gAAf/4AAH/+AAB//gAAf/4A
        AH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4A
        AH/+AAB//wAA//////////////////////8=
</value>
  </data>
</root>